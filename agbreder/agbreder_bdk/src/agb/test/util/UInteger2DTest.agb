
class UInteger2DTest do

	static this main () do
		UInteger2DTest.test1()
		UInteger2DTest.test2()
		UInteger2DTest.test3()
		UInteger2DTest.test4()
		return this
	end
	
	static this test1 () do 
		Console.println("UInteger2DTest.test1")
		Assert.equal("[[0, 0], [0, 0]]", new UInteger2D(2,2).toString())
		Assert.equal("[[0]]", new UInteger2D(1,1).toString())
		Assert.equal("[[]]", new UInteger2D(1,0).toString())
		Assert.equal("[[]]", new UInteger2D(1,-1).toString())
		Assert.equal("[]", new UInteger2D(-1,1).toString())
		Assert.equal(2, new UInteger2D(2,2).rowSize())
		Assert.equal(2, new UInteger2D(2,2).columnSize())
		return this
	end
	
	static this test2 () do 
		Console.println("UInteger2DTest.test2")
		Assert.equal("[[0, 5], [0, 0]]", new UInteger2D(2,2).set(1,2,5).toString())
		Assert.equal("[[5, 0], [0, 0]]", new UInteger2D(2,2).set(1,1,5).toString())
		Assert.equal("[[0, 0], [0, 5]]", new UInteger2D(2,2).set(2,2,5).toString())
		Assert.equal("[[0, 0], [0, 0]]", new UInteger2D(2,2).set(0,0,5).toString())
		Assert.equal("[[0, 0], [0, 0]]", new UInteger2D(2,2).set(3,3,5).toString())
		Assert.equal("[[0, 0], [0, 0]]", new UInteger2D(2,2).set(1,3,5).toString())
		return this
	end
	
	static this test3 () do 
		Console.println("UInteger2DTest.test3")
		Assert.equal("[[5, 0], [0, 0]]", new UInteger2D(2,2).sets(1,1,1,1,5).toString())
		Assert.equal("[[0, 0], [0, 5]]", new UInteger2D(2,2).sets(2,2,2,2,5).toString())
		Assert.equal("[[5, 0], [0, 0]]", new UInteger2D(2,2).sets(0,1,1,1,5).toString())
		Assert.equal("[[0, 0], [0, 5]]", new UInteger2D(2,2).sets(2,3,2,2,5).toString())
		Assert.equal("[[5, 5], [5, 5]]", new UInteger2D(2,2).sets(1,2,1,2,5).toString())
		Assert.equal("[[5, 5], [5, 5]]", new UInteger2D(2,2).sets(0,5,0,5,5).toString())
		return this
	end
	
	static this test4 () do 
		Console.println("UInteger2DTest.test4")
		Assert.equal("[[0, 0], [0, 5]]", new UInteger2D(2,2).copy(2, 2, new UInteger2D(2,2).set(1,1,5), 1, 1, 1, 1).toString())
		Assert.equal("[[0, 0], [0, 0]]", new UInteger2D(2,2).copy(3, 2, new UInteger2D(2,2).set(1,1,5), 1, 1, 1, 1).toString())
		Assert.equal("[[0, 0], [0, 0]]", new UInteger2D(2,2).copy(2, 3, new UInteger2D(2,2).set(1,1,5), 1, 1, 1, 1).toString())
		Assert.equal("[[5, 0], [0, 0]]", new UInteger2D(2,2).copy(1, 1, new UInteger2D(2,2).set(1,1,5), 1, 1, 1, 1).toString())
		Assert.equal("[[0, 0], [0, 0]]", new UInteger2D(2,2).copy(0, 1, new UInteger2D(2,2).set(1,1,5), 1, 1, 1, 1).toString())
		Assert.equal("[[0, 0], [0, 0]]", new UInteger2D(2,2).copy(1, 0, new UInteger2D(2,2).set(1,1,5), 1, 1, 1, 1).toString())
		Assert.equal("[[0, 0], [0, 0]]", new UInteger2D(2,2).copy(1, 0, new UInteger2D(2,2).sets(1,2,1,2,5), 1, 1, 1, 1).toString())
		Assert.equal("[[5, 0], [0, 0]]", new UInteger2D(2,2).copy(1, 0, new UInteger2D(2,2).sets(1,2,1,2,5), 1, 1, 1, 2).toString())
		Assert.equal("[[5, 0], [0, 0]]", new UInteger2D(2,2).copy(0, 0, new UInteger2D(2,2).sets(1,2,1,2,5), 0, 5, 0, 5).toString())
		return this
	end
	
end
